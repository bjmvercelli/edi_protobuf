generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model cliente {
  id       Int        @id
  nome     String     @db.VarChar(50)
  cpf      String     @unique @db.VarChar(20)
  telefone String     @db.VarChar(30)
  email    String     @unique @db.VarChar(100)
  login    String     @unique @db.VarChar(100)
  senha    String     @db.VarChar(100)
  endereco endereco[]
  pedido   pedido[]
}

model endereco {
  id          Int     @id
  rua         String  @db.VarChar(60)
  cidade      String  @db.VarChar(40)
  cep         String  @db.VarChar(20)
  bairro      String  @db.VarChar(50)
  numero      Int
  complemento String? @db.VarChar(60)
  cliente_id  Int
  cliente     cliente @relation(fields: [cliente_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model estoque {
  id         Int     @id
  quantidade Int
  produto_id Int
  produto    produto @relation(fields: [produto_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model item_pedido {
  id             Int     @id
  quantidade     Int
  preco_unitario Decimal @db.Decimal
  pedido_id      Int
  produto_id     Int
  pedido         pedido  @relation(fields: [pedido_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  produto        produto @relation(fields: [produto_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model ordem_transporte {
  id            Int        @id
  data_criacao  DateTime   @db.Date
  data_prevista DateTime   @db.Date
  data_limite   DateTime   @db.Date
  pedido_id     Int
  pedido        pedido     @relation(fields: [pedido_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  rastreio      rastreio[]
}

model pedido {
  id               Int                @id
  data_pedido      DateTime           @db.Date
  valor_total      Decimal            @db.Decimal
  cliente_id       Int
  item_pedido      item_pedido[]
  ordem_transporte ordem_transporte[]
  cliente          cliente            @relation(fields: [cliente_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model produto {
  id                Int            @id
  nome              String         @db.VarChar(50)
  preco_unitario    Decimal        @db.Decimal
  transportadora_id Int
  estoque           estoque[]
  item_pedido       item_pedido[]
  transportadora    transportadora @relation(fields: [transportadora_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model rastreio {
  id                  Int              @id
  status              status_type?
  cidade              String           @db.VarChar(60)
  estado              String           @db.VarChar(30)
  atual               Boolean
  ordem_transporte_id Int
  ordem_transporte    ordem_transporte @relation(fields: [ordem_transporte_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model transportadora {
  id      Int       @id
  nome    String    @db.VarChar(50)
  cnpj    String    @unique @db.VarChar(30)
  produto produto[]
}

enum status_type {
  Aguardando_Coleta @map("Aguardando Coleta")
  Enviado
  Em_Transporte     @map("Em Transporte")
  Entregue
}
